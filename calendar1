import java.time.DayOfWeek;
import java.time.LocalDate;
import java.util.Arrays;
import java.util.List;

public class ProductionCalendar {
    public static void main(String[] args) {

    }

    public boolean isWeekends(int year, int month, int day){
        LocalDate date = LocalDate.of(year, month, day);
        boolean isNonWorkingDay = isNonWorkingDay(date);
        return isNonWorkingDay;
    }

    public static boolean isWeekend(LocalDate date) {
        // Получаем день недели
        DayOfWeek dayOfWeek = date.getDayOfWeek();

        // Создаем список выходных дней
        List<DayOfWeek> weekendDays = Arrays.asList(DayOfWeek.SATURDAY, DayOfWeek.SUNDAY);

        // Возвращаем true, если день недели является выходным
        return weekendDays.contains(dayOfWeek);
    }

    public static boolean isHoliday(LocalDate date) {
        // Создаем список праздничных дней
        List<LocalDate> holidays = Arrays.asList(
                LocalDate.of(2024, 1, 1),
                LocalDate.of(2024, 1, 2),
                LocalDate.of(2024, 1, 3),
                LocalDate.of(2024, 1, 4),
                LocalDate.of(2024, 1, 5),
                LocalDate.of(2024, 1, 8),

                LocalDate.of(2024, 2, 23),

                LocalDate.of(2024, 3, 8),

                LocalDate.of(2024, 4, 29),
                LocalDate.of(2024, 4, 30),

                LocalDate.of(2024, 5, 1), // Праздник труда
                LocalDate.of(2024, 5, 9), // День Победы
                LocalDate.of(2024, 5, 10),

                LocalDate.of(2024, 6, 12),

                LocalDate.of(2024, 11, 4),

                LocalDate.of(2024, 12, 30),
                LocalDate.of(2024, 12, 31)

        );

        // Возвращаем true, если дата является праздником
        return holidays.contains(date);
    }

    public static boolean isNonWorkingDay(LocalDate date) {
        // Проверяем, является ли дата выходным или праздником
        return isWeekend(date) || isHoliday(date);
    }


}
